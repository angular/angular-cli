# Copyright Google Inc. All Rights Reserved.
#
# Use of this source code is governed by an MIT-style license that can be
# found in the LICENSE file at https://angular.dev/license

load("@npm//@angular/build-tooling/bazel/api-golden:index.bzl", "api_golden_test_npm_package")
load("@npm//@bazel/jasmine:index.bzl", "jasmine_node_test")
load("//tools:defaults.bzl", "pkg_npm", "ts_library")
load("//tools:interop.bzl", "ts_project")
load("//tools:ts_json_schema.bzl", "ts_json_schema")

licenses(["notice"])

package(default_visibility = ["//visibility:public"])

ts_json_schema(
    name = "app_shell_schema",
    src = "src/builders/app-shell/schema.json",
)

ts_json_schema(
    name = "browser_schema",
    src = "src/builders/browser/schema.json",
)

ts_json_schema(
    name = "browser_esbuild_schema",
    src = "src/builders/browser-esbuild/schema.json",
)

ts_json_schema(
    name = "dev_server_schema",
    src = "src/builders/dev-server/schema.json",
)

ts_json_schema(
    name = "extract_i18n_schema",
    src = "src/builders/extract-i18n/schema.json",
)

ts_json_schema(
    name = "jest_schema",
    src = "src/builders/jest/schema.json",
)

ts_json_schema(
    name = "karma_schema",
    src = "src/builders/karma/schema.json",
)

ts_json_schema(
    name = "protractor_schema",
    src = "src/builders/protractor/schema.json",
)

ts_json_schema(
    name = "server_schema",
    src = "src/builders/server/schema.json",
)

ts_json_schema(
    name = "ng_packagr_schema",
    src = "src/builders/ng-packagr/schema.json",
)

ts_json_schema(
    name = "ssr_dev_server_schema",
    src = "src/builders/ssr-dev-server/schema.json",
)

ts_json_schema(
    name = "prerender_schema",
    src = "src/builders/prerender/schema.json",
)

ts_json_schema(
    name = "web_test_runner_schema",
    src = "src/builders/web-test-runner/schema.json",
)

ts_project(
    name = "build_angular",
    srcs = glob(
        include = [
            "src/**/*.ts",
            "plugins/**/*.ts",
        ],
        exclude = [
            "src/test-utils.ts",
            "src/**/*_spec.ts",
            "src/**/tests/**/*.ts",
            "plugins/**/*_spec.ts",
            "src/testing/**/*.ts",
        ],
    ) + [
        "//packages/angular_devkit/build_angular:src/builders/app-shell/schema.ts",
        "//packages/angular_devkit/build_angular:src/builders/browser-esbuild/schema.ts",
        "//packages/angular_devkit/build_angular:src/builders/browser/schema.ts",
        "//packages/angular_devkit/build_angular:src/builders/dev-server/schema.ts",
        "//packages/angular_devkit/build_angular:src/builders/extract-i18n/schema.ts",
        "//packages/angular_devkit/build_angular:src/builders/jest/schema.ts",
        "//packages/angular_devkit/build_angular:src/builders/karma/schema.ts",
        "//packages/angular_devkit/build_angular:src/builders/ng-packagr/schema.ts",
        "//packages/angular_devkit/build_angular:src/builders/prerender/schema.ts",
        "//packages/angular_devkit/build_angular:src/builders/protractor/schema.ts",
        "//packages/angular_devkit/build_angular:src/builders/server/schema.ts",
        "//packages/angular_devkit/build_angular:src/builders/ssr-dev-server/schema.ts",
        "//packages/angular_devkit/build_angular:src/builders/web-test-runner/schema.ts",
    ],
    data = glob(
        include = [
            "src/**/schema.json",
            "src/**/*.js",
            "src/**/*.mjs",
            "src/**/*.html",
        ],
    ) + [
        "builders.json",
        "package.json",
    ],
    interop_deps = [
        "//packages/angular/build",
        "//packages/angular/build:private",
        "//packages/angular/ssr",
        "//packages/angular_devkit/build_webpack",
        "//packages/angular_devkit/core",
        "//packages/angular_devkit/core/node",
        "//packages/ngtools/webpack",
    ],
    module_name = "@angular-devkit/build-angular",
    deps = [
        "//:root_modules/@ampproject/remapping",
        "//:root_modules/@angular/common",
        "//:root_modules/@angular/compiler-cli",
        "//:root_modules/@angular/core",
        "//:root_modules/@angular/localize",
        "//:root_modules/@angular/platform-server",
        "//:root_modules/@angular/service-worker",
        "//:root_modules/@babel/core",
        "//:root_modules/@babel/generator",
        "//:root_modules/@babel/helper-annotate-as-pure",
        "//:root_modules/@babel/helper-split-export-declaration",
        "//:root_modules/@babel/plugin-transform-async-generator-functions",
        "//:root_modules/@babel/plugin-transform-async-to-generator",
        "//:root_modules/@babel/plugin-transform-runtime",
        "//:root_modules/@babel/preset-env",
        "//:root_modules/@babel/runtime",
        "//:root_modules/@discoveryjs/json-ext",
        "//:root_modules/@types/babel__core",
        "//:root_modules/@types/browser-sync",
        "//:root_modules/@types/karma",
        "//:root_modules/@types/less",
        "//:root_modules/@types/loader-utils",
        "//:root_modules/@types/node",
        "//:root_modules/@types/picomatch",
        "//:root_modules/@types/semver",
        "//:root_modules/@types/watchpack",
        "//:root_modules/@vitejs/plugin-basic-ssl",
        "//:root_modules/@web/test-runner",
        "//:root_modules/ajv",
        "//:root_modules/ansi-colors",
        "//:root_modules/autoprefixer",
        "//:root_modules/babel-loader",
        "//:root_modules/browserslist",
        "//:root_modules/copy-webpack-plugin",
        "//:root_modules/css-loader",
        "//:root_modules/esbuild",
        "//:root_modules/esbuild-wasm",
        "//:root_modules/fast-glob",
        "//:root_modules/http-proxy-middleware",
        "//:root_modules/istanbul-lib-instrument",
        "//:root_modules/jsonc-parser",
        "//:root_modules/karma",
        "//:root_modules/karma-source-map-support",
        "//:root_modules/less",
        "//:root_modules/less-loader",
        "//:root_modules/license-webpack-plugin",
        "//:root_modules/loader-utils",
        "//:root_modules/mini-css-extract-plugin",
        "//:root_modules/ng-packagr",
        "//:root_modules/open",
        "//:root_modules/ora",
        "//:root_modules/piscina",
        "//:root_modules/postcss",
        "//:root_modules/postcss-loader",
        "//:root_modules/resolve-url-loader",
        "//:root_modules/rxjs",
        "//:root_modules/sass",
        "//:root_modules/sass-loader",
        "//:root_modules/semver",
        "//:root_modules/source-map-loader",
        "//:root_modules/source-map-support",
        "//:root_modules/terser",
        "//:root_modules/tree-kill",
        "//:root_modules/tslib",
        "//:root_modules/typescript",
        "//:root_modules/webpack",
        "//:root_modules/webpack-dev-middleware",
        "//:root_modules/webpack-dev-server",
        "//:root_modules/webpack-merge",
        "//:root_modules/webpack-subresource-integrity",
        "//packages/angular_devkit/architect",
    ],
)

ts_library(
    name = "build_angular_test_lib",
    testonly = True,
    srcs = glob(
        include = [
            "src/**/*_spec.ts",
        ],
        exclude = [
            "src/builders/**/*_spec.ts",
        ],
    ),
    data = glob(["test/**/*"]),
    deps = [
        ":build_angular",
        ":build_angular_test_utils",
        "//packages/angular_devkit/architect/testing",
        "//packages/angular_devkit/core",
        "@npm//fast-glob",
        "@npm//prettier",
        "@npm//typescript",
        "@npm//webpack",
    ],
)

jasmine_node_test(
    name = "build_angular_test",
    srcs = [":build_angular_test_lib"],
)

genrule(
    name = "license",
    srcs = ["//:LICENSE"],
    outs = ["LICENSE"],
    cmd = "cp $(execpath //:LICENSE) $@",
)

pkg_npm(
    name = "npm_package",
    pkg_deps = [
        "//packages/angular/build:package.json",
        "//packages/angular_devkit/architect:package.json",
        "//packages/angular_devkit/build_webpack:package.json",
        "//packages/angular_devkit/core:package.json",
        "//packages/ngtools/webpack:package.json",
    ],
    tags = ["release-package"],
    deps = [
        ":README.md",
        ":build_angular",
        ":license",
    ],
)

api_golden_test_npm_package(
    name = "build_angular_api",
    data = [
        ":npm_package",
        "//goldens:public-api",
    ],
    golden_dir = "angular_cli/goldens/public-api/angular_devkit/build_angular",
    npm_package = "angular_cli/packages/angular_devkit/build_angular/npm_package",
)

# Large build_angular specs

ts_library(
    name = "build_angular_test_utils",
    testonly = True,
    srcs = glob(
        include = [
            "src/testing/**/*.ts",
            "src/**/tests/*.ts",
        ],
        exclude = [
            "src/**/*_spec.ts",
        ],
    ),
    data = glob(["test/**/*"]),
    tsconfig = "//:tsconfig-test.json",
    deps = [
        ":build_angular",
        "//modules/testing/builder",
        "//packages/angular/build",
        "//packages/angular/build:private",
        "//packages/angular_devkit/architect",
        "//packages/angular_devkit/architect/node",
        "//packages/angular_devkit/architect/testing",
        "//packages/angular_devkit/core",
        "//packages/angular_devkit/core/node",
        "@npm//rxjs",
    ],
)

LARGE_SPECS = {
    "app-shell": {},
    "dev-server": {
        "shards": 10,
        "size": "large",
        "flaky": True,
        "extra_deps": [
            "//packages/angular_devkit/build_webpack",
            "@npm//@types/http-proxy",
            "@npm//http-proxy",
            "@npm//puppeteer",
            "@npm//undici",
        ],
    },
    "extract-i18n": {},
    "karma": {
        "shards": 6,
        "size": "large",
        "flaky": True,
        "extra_deps": [
            "@npm//karma",
            "@npm//karma-chrome-launcher",
            "@npm//karma-coverage",
            "@npm//karma-jasmine",
            "@npm//karma-jasmine-html-reporter",
            "@npm//puppeteer",
            "@npm//webpack",
        ],
    },
    "protractor": {
        "extra_deps": [
            "@npm//jasmine-spec-reporter",
            "@npm//protractor",
            "@npm//puppeteer",
            "@npm//ts-node",
        ],
        # NB: does not run on rbe because webdriver manager uses an absolute path to chromedriver
        "tags": ["no-remote-exec"],
        # NB: multiple shards will compete for port 4200 so limiting to 1
        "shards": 1,
    },
    "server": {
        "size": "large",
        "extra_deps": [
            "@npm//@angular/animations",
        ],
    },
    "ng-packagr": {},
    "browser": {
        "shards": 10,
        "size": "large",
        "flaky": True,
        "extra_deps": [
            "@npm//@angular/animations",
            "@npm//@angular/material",
        ],
    },
    "prerender": {},
    "browser-esbuild": {},
    "ssr-dev-server": {
        "extra_deps": [
            "@npm//@types/browser-sync",
            "@npm//browser-sync",
            "@npm//express",
            "@npm//undici",
            "//packages/angular/ssr/node",
        ],
    },
}

[
    ts_library(
        name = "build_angular_" + spec + "_test_lib",
        testonly = True,
        srcs = glob(["src/builders/" + spec + "/**/*_spec.ts"]),
        tsconfig = "//:tsconfig-test.json",
        deps = [
            # Dependencies needed to compile and run the specs themselves.
            ":build_angular",
            ":build_angular_test_utils",
            "//modules/testing/builder",
            "//packages/angular/build",
            "//packages/angular/build:private",
            "//packages/angular_devkit/architect",
            "//packages/angular_devkit/architect/node",
            "//packages/angular_devkit/architect/testing",
            "//packages/angular_devkit/core",
            "//packages/angular_devkit/core/node",

            # Base dependencies for the application in hello-world-app.
            # Some tests also require extra dependencies.
            "@npm//@angular/common",
            "@npm//@angular/compiler",
            "@npm//@angular/compiler-cli",
            "@npm//@angular/core",
            "@npm//@angular/platform-browser",
            "@npm//@angular/platform-browser-dynamic",
            "@npm//@angular/router",
            "@npm//rxjs",
            "@npm//tslib",
            "@npm//typescript",
            "@npm//zone.js",
        ] + LARGE_SPECS[spec].get("extra_deps", []),
    )
    for spec in LARGE_SPECS
]

[
    jasmine_node_test(
        name = "build_angular_" + spec + "_test",
        size = LARGE_SPECS[spec].get("size", "medium"),
        flaky = LARGE_SPECS[spec].get("flaky", False),
        shard_count = LARGE_SPECS[spec].get("shards", 2),
        # These tests are resource intensive and should not be over-parallized as they will
        # compete for the resources of other parallel tests slowing everything down.
        # Ask Bazel to allocate multiple CPUs for these tests with "cpu:n" tag.
        tags = [
            "cpu:2",
        ] + LARGE_SPECS[spec].get("tags", []),
        deps = [":build_angular_" + spec + "_test_lib"],
    )
    for spec in LARGE_SPECS
]
