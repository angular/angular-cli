{
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "Unit testing",
  "description": "Unit testing options for Angular applications.",
  "type": "object",
  "properties": {
    "buildTarget": {
      "type": "string",
      "description": "Specifies the build target to use for the unit test build in the format `project:target[:configuration]`. You can also pass a comma-separated list of configurations. Example: `project:target:production,staging`.",
      "pattern": "^[^:\\s]*:[^:\\s]*(:[^\\s]+)?$"
    },
    "tsConfig": {
      "type": "string",
      "description": "The path to the TypeScript configuration file, relative to the workspace root."
    },
    "runner": {
      "type": "string",
      "description": "Specifies the test runner to use for test execution.",
      "enum": ["karma", "vitest"]
    },
    "browsers": {
      "description": "Specifies the browsers to use for test execution. When not specified, tests are run in a Node.js environment using jsdom. For both Vitest and Karma, browser names ending with 'Headless' (e.g., 'ChromeHeadless') will enable headless mode.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "minItems": 1
    },
    "include": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": ["**/*.spec.ts"],
      "description": "Specifies glob patterns of files to include for testing, relative to the project root. This option also has special handling for directory paths (includes all `.spec.ts` files within) and file paths (includes the corresponding `.spec` file if one exists)."
    },
    "exclude": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Specifies glob patterns of files to exclude from testing, relative to the project root."
    },
    "filter": {
      "type": "string",
      "description": "Specifies a regular expression pattern to match against test suite and test names. Only tests with a name matching the pattern will be executed. For example, `^App` will run only tests in suites beginning with 'App'."
    },
    "watch": {
      "type": "boolean",
      "description": "Enables watch mode, which re-runs tests when source files change. Defaults to `true` in TTY environments and `false` otherwise."
    },
    "debug": {
      "type": "boolean",
      "description": "Enables debugging mode for tests, allowing the use of the Node Inspector.",
      "default": false
    },
    "codeCoverage": {
      "type": "boolean",
      "description": "Enables code coverage reporting for tests.",
      "default": false
    },
    "codeCoverageExclude": {
      "type": "array",
      "description": "Specifies glob patterns of files to exclude from the code coverage report.",
      "items": {
        "type": "string"
      }
    },
    "codeCoverageReporters": {
      "type": "array",
      "description": "Specifies the reporters to use for code coverage results. Each reporter can be a string representing its name, or a tuple containing the name and an options object. Built-in reporters include 'html', 'lcov', 'lcovonly', 'text', 'text-summary', 'cobertura', 'json', and 'json-summary'.",
      "items": {
        "oneOf": [
          {
            "$ref": "#/definitions/coverage-reporters"
          },
          {
            "type": "array",
            "minItems": 1,
            "maxItems": 2,
            "items": [
              {
                "$ref": "#/definitions/coverage-reporters"
              },
              {
                "type": "object"
              }
            ]
          }
        ]
      }
    },
    "reporters": {
      "type": "array",
      "description": "Specifies the reporters to use during test execution. Each reporter can be a string representing its name, or a tuple containing the name and an options object. Built-in reporters include 'default', 'verbose', 'dots', 'json', 'junit', 'tap', 'tap-flat', and 'html'. You can also provide a path to a custom reporter.",
      "items": {
        "oneOf": [
          {
            "anyOf": [
              {
                "$ref": "#/definitions/reporters-enum"
              },
              {
                "type": "string"
              }
            ]
          },
          {
            "type": "array",
            "minItems": 1,
            "maxItems": 2,
            "items": [
              {
                "anyOf": [
                  {
                    "$ref": "#/definitions/reporters-enum"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              {
                "type": "object"
              }
            ]
          }
        ]
      }
    },
    "outputFile": {
      "type": "string",
      "description": "Specifies a file path for the test report, applying only to the first reporter. To configure output files for multiple reporters, use the tuple format `['reporter-name', { outputFile: '...' }]` within the `reporters` option. When not provided, output is written to the console."
    },
    "providersFile": {
      "type": "string",
      "description": "Specifies the path to a TypeScript file that provides an array of Angular providers for the test environment. The file must contain a default export of the provider array.",
      "minLength": 1
    },
    "setupFiles": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "A list of paths to global setup files that are executed before the test files. The application's polyfills and the Angular TestBed are always initialized before these files."
    },
    "progress": {
      "type": "boolean",
      "description": "Shows build progress information in the console. Defaults to the `progress` setting of the specified `buildTarget`."
    },
    "listTests": {
      "type": "boolean",
      "description": "Lists all discovered test files and exits the process without building or executing the tests.",
      "default": false
    },
    "dumpVirtualFiles": {
      "type": "boolean",
      "description": "Dumps build output files to the `.angular/cache` directory for debugging purposes.",
      "default": false,
      "visible": false
    }
  },
  "additionalProperties": false,
  "required": ["buildTarget", "tsConfig", "runner"],
  "definitions": {
    "coverage-reporters": {
      "enum": [
        "html",
        "lcov",
        "lcovonly",
        "text",
        "text-summary",
        "cobertura",
        "json",
        "json-summary"
      ]
    },
    "reporters-enum": {
      "type": "string",
      "enum": ["default", "verbose", "dots", "json", "junit", "tap", "tap-flat", "html"]
    }
  }
}
