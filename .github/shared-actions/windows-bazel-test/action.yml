name: 'Native Windows Bazel e2e test'
description: 'Runs an Angular CLI e2e Bazel test on native Windows (dispatched from inside WSL)'
author: 'Angular'

inputs:
  command:
    description: |
      Shell command to run the Bazel test. When multi-line, needs to end with
      a trailing `\` to allow for the extra added that enable running the
      WSL native Windows test.
    required: true

runs:
  using: composite
  steps:
    - name: Setup Bazel
      uses: angular/dev-infra/github-actions/bazel/setup@b015169b635123c1ab9084f604e36b6342eac171
    - name: Setup Bazel RBE
      uses: angular/dev-infra/github-actions/bazel/configure-remote@2667d139a421977a40c3ea7ec768609fb19a8b9d
      with:
        allow_windows_rbe: true

    - name: Initialize WSL
      id: init_wsl
      uses: angular/dev-infra/github-actions/setup-wsl@0b004688d62e0fff2dbbb98362ff1b484348116a
    - name: Install node modules in WSL (re-using from previous install/cache restore)
      run: yarn install --immutable
      shell: wsl-bash {0}

    # Notes for below command:
    #   * strategy=TestRunner: Needed as we will create files outside of the WSL-bound sandbox.
    #   * symlink_prefix=/:    Needed as otherwise we will create unix symlinks in the Windows host.
    - run: |
        ${{inputs.command}} \
          --//e2e/legacy-cli:enable_native_windows_testing=true \
          --test_env="NG_E2E_RUNNER_WSL_ROOT=${{steps.init_wsl.outputs.wsl_root_path}}" \
          --test_env="NG_E2E_RUNNER_WSL_UNC_BASE=${{steps.init_wsl.outputs.wsl_root_unc_path}}" \
          --test_env="NG_E2E_RUNNER_WINDOWS_CMD=${{steps.init_wsl.outputs.cmd_path}}" \
          --test_env="NG_E2E_RUNNER_WINDOWS_NPM=${{steps.init_wsl.outputs.npm_path}}" \
          --test_env="NG_E2E_RUNNER_WINDOWS_TMP_DIR=${{steps.init_wsl.outputs.tmp_path}}" \
          --test_env="NG_E2E_RUNNER_WINDOWS_GIT_BASH_BIN=${{steps.init_wsl.outputs.git_path}}" \
          --test_env="NG_E2E_RUNNER_WSL_HOST_ADDR=$(ip route show | grep -i default | awk '{ print $3}')" \
          --test_env="NG_E2E_RUNNER_WSL_VM_ADDR=$(hostname -I)" \
          --strategy=TestRunner=standalone \
          --symlink_prefix=/
      shell: wsl-bash {0}
      env:
        # See: https://devblogs.microsoft.com/commandline/share-environment-vars-between-wsl-and-windows
        WSLENV: 'GOOGLE_APPLICATION_CREDENTIALS/p'
